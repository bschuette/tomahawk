<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>tomahawk-sandbox-examples20</artifactId>
    <packaging>war</packaging>
    <name>Sandbox Examples 2.0</name>

    <parent>
        <groupId>org.apache.myfaces.tomahawk</groupId>
        <artifactId>sandbox-project</artifactId>
        <version>1.1.15-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    
    <scm>
        <connection>scm:svn:http://svn.apache.org/repos/asf/myfaces/tomahawk/trunk/sandbox/examples20</connection>
        <developerConnection>scm:svn:https://svn.apache.org/repos/asf/myfaces/tomahawk/trunk/sandbox/examples20</developerConnection>
        <url>http://svn.apache.org/viewcvs.cgi/myfaces/tomahawk/trunk/sandbox/examples20</url>
    </scm>

    <profiles>
        <profile>
            <id>generate-assembly</id>
            <activation>
              <property>
                <name>performRelease</name>
                <value>true</value>
              </property>
            </activation>
            <build>        
                <plugins>	    
                    <plugin>	
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dependency-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack-source</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>  	   
                                        <artifactItem>
                                            <groupId>org.apache.myfaces.tomahawk</groupId>
                                            <artifactId>${artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <classifier>sources</classifier>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/src</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>	           
                </plugins>	
            </build>
        </profile>

        <!-- By default the war examples use myfaces! :) -->
        <profile>
            <id>myfaces-2.0</id>
            <activation>
                <property>
                    <name>!jsf</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.myfaces.core</groupId>
                    <artifactId>myfaces-api</artifactId>
                    <version>${myfaces-core20-version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.myfaces.core</groupId>
                    <artifactId>myfaces-impl</artifactId>
                    <version>${myfaces-core20-version}</version>
                    <!-- Tomahawk examples must only have runtime dependency to myfaces-impl
                 so that it will be automatically added to war. But there must not be
                 any compile dependency on impl so that is is always possible to use
                 other JSF implementations. -->
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>javax.servlet</groupId>
                    <artifactId>jstl</artifactId>
                    <version>1.2</version>
                </dependency>
                <dependency>
                    <groupId>taglibs</groupId>
                    <artifactId>standard</artifactId>
                    <version>1.1.2</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-el_1.0_spec</artifactId>
                </dependency>
            </dependencies>

            <properties>
                <jsf_implementation>MyFaces 2.0</jsf_implementation>
            </properties>
        </profile>

        <!-- To use the examples using the Sun's JSF Reference Implementation 1.2 : -Djsf=ri12 -->
        <profile>
            <id>jsfri</id>
            <activation>
                <property>
                    <name>jsf</name>
                    <value>ri</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.sun.faces</groupId>
                    <artifactId>jsf-api</artifactId>
                    <version>2.0.3</version>
                </dependency>
                <dependency>
                    <groupId>com.sun.faces</groupId>
                    <artifactId>jsf-impl</artifactId>
                    <version>2.0.3</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.geronimo.specs</groupId>
                    <artifactId>geronimo-el_1.0_spec</artifactId>
                </dependency>
            </dependencies>

            <repositories>
                <repository>
                    <id>java.net</id>
                    <name>java.net Maven 2 Repository</name>
                    <url>http://download.java.net/maven/2</url>
                </repository>
            </repositories>

            <properties>
                <jsf_implementation>JSF-RI 2.0</jsf_implementation>
            </properties>
        </profile>

        <!-- Profile to run jetty, so the tomcat jars are included in the bundle. They are not included by default -->
        <profile>
            <id>jettyConfig</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <version>6.1.11</version>
                        <configuration>
                            <scanIntervalSeconds>10</scanIntervalSeconds>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>tomahawk-current20</id>
            <activation>
                <property>
                    <name>!tomahawk</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.apache.myfaces.tomahawk</groupId>
                    <artifactId>tomahawk-sandbox20</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>batik</groupId>
                    <artifactId>batik-awt-util</artifactId>
                    <version>1.6-1</version>
                </dependency>     
                <dependency>
                    <groupId>com.lowagie</groupId>
                    <artifactId>itext</artifactId>
                    <version>1.4.8</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
          <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.myfaces.commons</groupId>
            <artifactId>myfaces-components20</artifactId>
            <version>1.0.1</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>        
    </dependencies>

    <build>
        <!--
        <finalName>${artifactId}</finalName>
        -->

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/java</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.11</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <configuration>
                <source>1.5</source>
                <target>1.5</target>
              </configuration>
            </plugin>
        </plugins>
    </build>

  <properties>
     <!-- Tomahawk examples must only have runtime dependency to the imlementation
          so that it will be automatically added to war. But there must not be
          any compile dependency on impl so that is is always possible to use
          other JSF implementations. -->
     <jsf-impl.scope>runtime</jsf-impl.scope>
  </properties>

</project>
